enum SideOfStreet {
    N
    S
    E
    W
}

type Location {
    _id: ID!
    boro: Borough!
    order_no: String!
    main_st: String!
    from_st: String!
    to_st: String!
    sos: SideOfStreet!
}

type StreetNames {
    boro: String!
    streetNames: [String!]
}

input locationsInput {
    boro: Borough
    main_st: String
    from_st: String
    to_st: String
}

type Query {
    location(_id: String, boro: Borough, main_st: String, from_st: String): Location
    locationsByLatLng(lat: Float!, lng: Float!): StreetNames!
    locations(input: locationsInput!, offset: Int, limit: Int): [Location]
    reverseGeocode(lat: Float!, lng: Float!):String
}

input addLocationInput {
    _id: ID
    boro: Borough!
    order_no: String!
    main_st: String!
    from_st: String!
    to_st:String!
    sos:SideOfStreet!
}

input removeLocationInput {
    _id: ID!
}

input updateLocationInput {
    _id: ID!
    boro: Borough
    order_no: String
    main_st: String
    from_st: String
    to_st:String
    sos:SideOfStreet
}

type Mutation {
    addLocation(input: addLocationInput!):Location!
    removeLocation(input: removeLocationInput!):Boolean!
    updateLocation(input: updateLocationInput!):Location!
}
